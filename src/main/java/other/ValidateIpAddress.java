package other;

import org.junit.Assert;
import org.junit.Test;

//https://leetcode.com/problems/validate-ip-address
public class ValidateIpAddress {
    public String validIPAddress(String queryIP) {
        if(queryIP.contains(".")) {
            return validateIPv4(queryIP);
        }
        if(queryIP.contains(":")) {
            return validateIPv6(queryIP);
        }

        return "Neither";
    }

    private boolean isValid(String ipv6Part) {
        for(char c: ipv6Part.toCharArray()) {
            if(Character.isDigit(c)) {
                continue;
            }
            if(c >= 'a' && c <= 'f') {
                continue;
            } else if(c >= 'A' && c <= 'F') {
                continue;
            } else {
                return false;
            }
        }

        return true;
    }

    private String validateIPv6(String queryIP) {
        if(!isValid(String.valueOf(queryIP.charAt(0))) || !isValid(String.valueOf(queryIP.charAt(queryIP.length() - 1)))) {
            return "Neither";
        }
        String[] parts = queryIP.split("\\:");
        if(parts.length != 8) {
            return "Neither";
        }

        for(String part: parts) {
            if(part.length() < 1 || part.length() > 4) {
                return "Neither";
            }
            if(!isValid(part)) {
                return "Neither";
            }
        }

        return "IPv6";
    }

    private String validateIPv4(String queryIP) {
        if(!isValieV4(String.valueOf(queryIP.charAt(0))) || !isValieV4(String.valueOf(queryIP.charAt(queryIP.length() - 1)))) {
            return "Neither";
        }
        String[] parts = queryIP.split("\\.");
        if(parts.length != 4) {
            return "Neither";
        }

        for(String part: parts) {
            if(part.isEmpty() || part.length() > 3) {
                return "Neither";
            }
            if("0".equals(part)) {
                continue;
            }
            if(part.charAt(0) == '0') {
                return "Neither";
            }
            if(!isValieV4(part)) {
                return "Neither";
            }
            int num = Integer.parseInt(part);
            if(num > 255) {
                return "Neither";
            }
        }

        return "IPv4";
    }

    private boolean isValieV4(String part) {
        for(char c : part.toCharArray()) {
            if(c < '0' || c > '9') {
                return false;
            }
        }

        return true;
    }

    @Test
    public void test5() {
        Assert.assertEquals("Neither", validIPAddress
    }

    @Test
    public void test4() {
        Assert.assertEquals("Neither", validIPAddress("12..33.4"));
    }

    @Test
    public void test3() {
        Assert.assertEquals("Neither", validIPAddress("1e1.4.5.6"));
    }
    @Test
    public void test2() {
        Assert.assertEquals("Neither", validIPAddress("2001:0db8:85a3:0:0:8A2E:0370:7334:"));
    }

    @Test
    public void test() {
        Assert.assertEquals("IPv6", validIPAddress("2001:0db8:85a3:0:0:8A2E:0370:7334"));
    }
}
